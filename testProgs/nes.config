MEMORY {

#ZP:  start = $02, size = $1A, type = rw, define = yes;
ZP:  start = $10, size = $100, type = rw, define = yes;

HEADER: start = $0, size = $10, file = %O ,fill = yes;

#ROM0: start = $8000, size = $7ff4, file = %O ,fill = yes, define = yes;
ROM0: start = $8000, size = $5000, file = %O ,fill = yes, define = yes;

ROM2: start = $D000, size = $2ff4, file = %O, fill = yes;

ROMV: start = $fff4, size = $c, file = %O, fill = yes;

SRAM: start = $0500, size = $0300, define = yes;

RAM: start = $6000, size = $2000, define = yes;

}

SEGMENTS {
HEADER:   load = HEADER,          type = ro;
STARTUP:  load = ROM0,            type = ro,  define = yes;
LOWCODE:  load = ROM0,            type = ro,                optional = yes;
INIT:     load = ROM0,            type = ro,  define = yes, optional = yes;
CODE:     load = ROM0,            type = ro,  define = yes;
RODATA:   load = ROM0,            type = ro,  define = yes;
#DATA:     load = ROM0, run = RAM, type = rw,  define = yes;
DATA:     load = ROM0, 		  type = rw,  define = yes;
VECTORS:  load = ROMV,            type = rw;
CHARS:    load = ROM2,            type = rw;
BSS:      load = RAM,             type = bss, define = yes;
HEAP:     load = RAM,             type = bss, optional = yes;
ZEROPAGE: load = ZP,              type = zp;
}

SYMBOLS {
__STACKSIZE__ = $0300;
}

